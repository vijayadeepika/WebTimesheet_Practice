@model webtimesheet_Practice.models.Registration
@{
    ViewBag.Title = "Registration";
   
}

<h4 class="page-header">Create user</h4>
<div class="panel panel-default">
    <div class="panel-heading">Create user</div>
    <div class="panel-body">
        @if (TempData["messgaeregistration"] != null)
        {
            <p class="alert alert-success" id="successmessage">@TempData["messgaeregistration"]</p>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @using (Html.BeginForm())
        {
            <div class="row">
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-lable manadatory" })
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @maxlength = 40, @onkeypress = "return onlyspecialchar(event);" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.Mobileno, htmlAttributes: new { @class = "control-lable manadatory" })
                    @Html.TextBoxFor(model => model.Mobileno, new { @class = "form-control", @maxlength = 40, @onkeypress = "return onlyspecialchar(event);" })
                    @Html.ValidationMessageFor(model => model.Mobileno, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-lable manadatory" })
                    @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control", @maxlength = 50 })
                    @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="row">
                <div class="clearfix">

                </div>
                <div class="col-lg-4" style="margin-top:20px">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-lable manadatory" })
                    @Html.RadioButtonFor(model => model.Gender, "M") @Html.Label("", "Male")
                    @Html.RadioButtonFor(model => model.Gender, "F")@Html.Label("", "Female")
                    <br />
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Birthdate, new { @class = "form-control", @onkeypress = "alert('Choose Birthdate');" })
                    @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.DateofJoining, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.DateofJoining, new { @class = "form-control", @onkeypress = "alert('Choose DateofJoining');" })
                    @Html.ValidationMessageFor(model => model.DateofJoining, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.TextBoxFor(model => model.Username, new { @class = "form-control", @maxlength = 20, @onkeypress = "return onlyspecchar(event);", @onblur = "CheckUsernameExists();" })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", @maxlength = 30, })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label manadatory" })
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-lg-4">
                    <input type="submit" value="Create User" class="btn btn-success" />
                    @Html.ActionLink("Clear", "Registration", "Registration", null, new { @class = "btn btn-danger" })
                    @Html.ActionLink("All Users", "Users", "AllUsers", null, new { @class = "btn btn-info" })
                </div>
            </div>
        }
    </div>
</div>
